@using dotNetStore.Data
@using dotNetStore.Models
@inject NavigationManager _NavManager
@inject CartService _Cart
@inject IJSRuntime _JSRuntime
@implements IDisposable

<!-- HEADER -->
<header>
	<!-- TOP HEADER -->
	<div id="top-header">
		<div class="container">
			<ul class="header-links pull-left">
				<li><a href="#"><i class="fa fa-phone"></i> 06 66 66 66 66</a></li>
				<li><a href="#"><i class="fa fa-envelope-o"></i> info@gmail.com</a></li>
				<li><a href="#"><i class="fa fa-map-marker"></i> 34 nom boulevard , nom ville</a></li>
			</ul>
		</div>
	</div>
	<!-- /TOP HEADER -->
	<!-- MAIN HEADER -->
	<div id="header">
		<!-- container -->
		<div class="container">
			<!-- row -->
			<div class="row">
				<!-- LOGO -->
				<div class="col-md-3">
					<div class="header-logo">
						<a href="#" class="logo">
							<img src="./img/logo.png" alt="">
						</a>
					</div>
				</div>
				<!-- /LOGO -->
				<!-- SEARCH BAR -->
				<div class="col-md-6">
					<div class="header-search">
						<form @onsubmit="GoToFiltres" @onsubmit:preventDefault>
							<select @bind="MarqueId" class="input-select">
								<option value="0" style="text-align:center;">Tous ...</option>
								@if (Marques != null)
								{
									@foreach (var m in Marques)
									{
										<option value="@m.Id">@m.Nom</option>
									}
								}
							</select>
							<input @bind="Text" @bind:event="oninput" class="input" placeholder="Recherche">
							<button class="search-btn">Recherche</button>
						</form>
					</div>
				</div>
				<!-- /SEARCH BAR -->
				<!-- ACCOUNT -->
				<div class="col-md-3 clearfix">
					<div class="header-ctn">
						<!-- Cart -->
						<div class="dropdown">
							<a class="dropdown-toggle" data-toggle="dropdown" aria-expanded="true">
								<i class="fa fa-shopping-cart"></i>
								<span>Votre panier</span>
								<div class="qty">@_Cart.Items.Count</div>
							</a>
							<div class="cart-dropdown">
								<div class="cart-list">
									@if (_Cart.Items.Count == 0)
									{
										<p>Vide !</p>
									}
									else
									{
										@foreach (var item in _Cart.Items)
										{
											<div class="product-widget">
												<div class="product-img">
													<img src="./img/produits/@item.Photo" alt="@item.Nom">
												</div>
												<div class="product-body">
													<h3 class="product-name"><a href="/Details/@item.Id">@item.Nom</a></h3>
													<h4 class="product-price"><span class="qty">@(item.Qte)x</span>@item.Prix DH</h4>
												</div>
												<button onclick="RemoveFromCart(@item.ProduitId)" class="delete"><i class="fa fa-close"></i></button>
											</div>
										}
									}
								</div>
								<div class="cart-summary">
									<small>@_Cart.Items.Count article(s) choisi(s)</small>
									<h5>SOMME : @_Cart.Items.Sum(p => p.Total)</h5>
								</div>
								<div class="cart-btns">
									<a href="javascript:void(0);" onclick="ClearCart()">Vider le panier</a>
									<a href="javascript:void(0);" onclick="HeaderGoTo('/Checkout')">Commander  <i class="fa fa-arrow-circle-right"></i></a>
								</div>
							</div>
						</div>
						<!-- /Cart -->
						<!-- Menu Toogle -->
						<div class="menu-toggle">
							<a href="#">
								<i class="fa fa-bars"></i>
								<span>Menu</span>
							</a>
						</div>
						<!-- /Menu Toogle -->
					</div>
				</div>
				<!-- /ACCOUNT -->
			</div>
			<!-- row -->
		</div>
		<!-- container -->
	</div>
	<!-- /MAIN HEADER -->
</header>
<!-- /HEADER -->

<!-- NAVIGATION -->
<nav id="navigation">
	<!-- container -->
	<div class="container">
		<!-- responsive-nav -->
		<div id="responsive-nav">
			<!-- NAV -->
			<ul class="main-nav nav navbar-nav">
				<li><NavLink href="/" style="font-weight:bold;">Accueil</NavLink></li>
				<li><NavLink href="/Filtres">Tous les produits</NavLink></li>
				<li><NavLink href="/Contacts">Contacts</NavLink></li>
				<li><NavLink href="/Apropos">A propos de nous</NavLink></li>
				<li><NavLink href="/Politique">Mentions légales</NavLink></li>
				<li><NavLink href="/admin/Produits">Administration</NavLink></li>
@* 				@foreach (var c in Categories)
				{
					var link = "/Filtres/" + @c.Id;
					<li><NavLink href="@link" activeClass="active">@c.Categorie</NavLink></li>
				} *@
			</ul>
			<!-- /NAV -->
		</div>
		<!-- /responsive-nav -->
	</div>
	<!-- /container -->
</nav>
<!-- /NAVIGATION -->
@code {
	string Text = "";
	int MarqueId = 0;
	private DotNetObjectReference<Header>? dotNetReference;

	private void GoToFiltres()
	{
		_NavManager.NavigateTo($"/Filtres/0/{MarqueId}/{Text}");
	}
	private void GoToDetails(int id)
	{
		_NavManager.NavigateTo($"/Details/{id}");
	}
	[JSInvokable]
	public void HeaderGoTo(string path)
	{
		if (_Cart.Items.Count>0)
			_NavManager.NavigateTo(path);
	}

	[JSInvokable]
	public void RemoveFromCart(int productId)
	{
		_Cart.RemoveFromCart(productId);
		StateHasChanged();
	}
	[JSInvokable]
	public void ClearCart()
	{
		_Cart.Items.Clear();
		StateHasChanged();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			_Cart.OnCartUpdated += StateHasChanged; // Subscribe to cart updates
			dotNetReference = DotNetObjectReference.Create(this);
			await _JSRuntime.InvokeVoidAsync("initializeHeaderInterop", dotNetReference);
			await _JSRuntime.InvokeVoidAsync("initializeScripts", 9999, dotNetReference);
		}
	}
	public void Dispose()
	{
		_Cart.OnCartUpdated -= StateHasChanged; // Unsubscribe to avoid memory leaks
		if (dotNetReference != null)
		{
			dotNetReference?.Dispose();
			dotNetReference = null;
		}
	}
}
}
