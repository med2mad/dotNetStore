@page "/Filtres/{CategorieId:int?}/{MarqueId:int?}/{SearchText?}"
@rendermode InteractiveServer
@implements IDisposable

<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<!-- ASIDE -->
			<div id="aside" class="col-md-3">
				<!-- aside Widget -->
				<div class="aside">
					<h3 class="aside-title">Categories</h3>
					<div class="checkbox-filter">
						@if (Categories != null)
						{
							@foreach(var c in Categories)
							{
								<div class="input-checkbox">
									<input type="checkbox" value="@c.Categorie" @onchange="@(e => ToggleCategory(c.Id, (bool)e.Value))" checked="@SelectedCategories.Contains(c.Id)" id="categorie-@c.Id">
									<label for="categorie-@c.Id">
										<span></span>
										@c.Categorie
										<small>(@(c.Produits?.Count ?? 0))</small>
									</label>
								</div>
							}
						}
					</div>
				</div>
				<!-- /aside Widget -->
				<!-- aside Widget -->
				<div class="aside">
					<h3 class="aside-title">Price</h3>
					<div class="price-filter">
						<div id="price-slider"></div>
						<div class="input-number price-min">
							<input id="price-min" type="number">
							<span class="qty-up">+</span>
							<span class="qty-down">-</span>
						</div>
						<span>-</span>
						<div class="input-number price-max">
							<input id="price-max" type="number">
							<span class="qty-up">+</span>
							<span class="qty-down">-</span>
						</div>
					</div>
				</div>
				<!-- /aside Widget -->
				<!-- aside Widget -->
				<div class="aside">
					<h3 class="aside-title">Brand</h3>
					<div class="checkbox-filter">
						@if (Marques != null)
						{
							@foreach (var m in Marques)
							{
								<div class="input-checkbox">
									<input type="checkbox" @onchange="@(e => ToggleMarque(m.Id, (bool)e.Value))" checked="@SelectedMarques.Contains(m.Id)" id="marque-@m.Id">
									<label for="marque-@m.Id">
										<span></span>
										@m.Nom
										<small>(@(m.Produits?.Count ?? 0))</small>
									</label>
								</div>
							}
						}
					</div>
				</div>
				<!-- /aside Widget -->
				<!-- aside Widget -->
				<div class="aside">
					<h3 class="aside-title">Top selling</h3>
					@if (TopVentes != null)
					{
						@foreach (var p in TopVentes)
						{
							<div class="product-widget">
								<div class="product-img">
									<img @onclick="()=>GoToDetails(p.Id)" src="./img/produits/@p.Photo1" alt="@p.Nom">
								</div>
								<div class="product-body">
									<p class="product-category">@p.Categorie?.Categorie</p>
									<h3 class="product-name"><a href="/Product/@p.Id">@p.Nom</a></h3>
									<h4 class="product-price">@p.Prix DH <del class="product-old-price">@p.PrixAncien DH</del></h4>
								</div>
							</div>
						}
					}
				</div>
				<!-- /aside Widget -->
			</div>
			<!-- /ASIDE -->
			<!-- STORE -->
			<div id="store" class="col-md-9">
				<!-- store top filter -->
				<div class="store-filter clearfix">
					<div class="store-sort">
						<label>
							Sort By
							<select @onchange="@(e => OnSortChange((string)e.Value))" class="input-select">
								<option value=""></option>
								<option value="Nom">Nom</option>
								<option value="Prix">Prix</option>
								<option value="Categorie">Catégorie</option>
								<option value="Marque">Marque</option>
							</select>
						</label>
						<label>
							Ordre
							<select @onchange="@(e => OnOrderChange((string)e.Value))" class="input-select">
								<option value="ASC">Croissant</option>
								<option value="DESC ">Décroissant </option>
							</select>
						</label>
						<label>
							Show
							<select @onchange="@(e => OnChangeCount((string)e.Value))" class="input-select">
								<option value="15">15</option>
								<option value="30">30</option>
								<option value="60">60</option>
							</select>
						</label>
					</div>
				</div>
				<!-- /store top filter -->
				<!-- store products -->
				<div class="row">
					<!-- product -->
					@if (ProduitsFiltres == null)
					{
						<p>Chargement...</p>
					}
					else if (!ProduitsFiltres.Any())
					{
						<h1 style="color:#D10024">Aucun Article !</h1>
					}
					else
					{
						@foreach (var p in ProduitsFiltres)
						{
							<div class="col-md-4 col-xs-6">
								<div class="product">
									<div class="product-img">
										<img @onclick="()=>GoToDetails(p.Id)" src="./img/produits/@p.Photo1" alt="@p.Nom">
										<div class="product-label">
											@((MarkupString)(p.BadgeReduction > 0 ? $"<span class='sale'>-{Math.Abs(p.BadgeReduction)}%</span>" : ""))
											@((MarkupString)(p.BadgeNew ? "<span class='new'>NEW</span>" : ""))
										</div>
									</div>
									<div class="product-body">
										<p class="product-category">@p.Categorie?.Categorie</p>
										<h3 class="product-name"><a href="/Product/@p.Id">@p.Nom</a></h3>
										<h4 class="product-price">@p.Prix DH <del class="product-old-price">@p.PrixAncien DH</del></h4>
									</div>
									<div class="add-to-cart">
										<button class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i> add to cart</button>
									</div>
								</div>
							</div>
						}
					}
					<!-- /product -->
				</div>
				<!-- /store products -->
				<!-- store bottom filter -->
				<div class="store-filter clearfix">
					<span class="store-qty">Showing 20-100 products</span>
					<ul class="store-pagination">
						@{string link = "";}
						@for (int i = 1; i <= Pages; i++)
						{
							link = "/Filtres/0/" + @i;
							var ii = i;
							<li @onclick="()=>{OnChangePage(ii);}" class="@(CurrentPage == i ? "active" : "")">
								@if (CurrentPage != i)
								{
									<a href="javascript:void(0);">@i</a>
								}
								else
									@i
							</li>
						}
						@{
							int x = CurrentPage == Pages ? CurrentPage : CurrentPage + 1;
						}
						<li @onclick="()=>{OnChangePage(x);}"><a href="javascript:void(0);"><i class="fa fa-angle-right"></i></a></li>
					</ul>
				</div>
				<!-- /store bottom filter -->
			</div>
			<!-- /STORE -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->




@code {
	[Inject] NavigationManager _NavigationManager { get; set; } = default!;
	private DotNetObjectReference<Filtres>? dotNetReference;

	private HashSet<int> SelectedCategories { get; set; } = new HashSet<int>();
	private HashSet<int> SelectedMarques { get; set; } = new HashSet<int>();
	private int SelectedPrixMin { get; set; } = 0;
	private int SelectedPrixMax { get; set; }
	private string Sort { get; set; } = "";
	private string Order { get; set; } = "ASC";
	private int PerPage { get; set; } = 2;
	private int Pages { get; set; }
	public int CurrentPage { get; set; } = 1;

	private void GoToDetails(int id)
	{
		_NavigationManager.NavigateTo($"/Details/{id}");
	}

	private void ToggleCategory(int categoryId, bool isSelected)
	{
		if (isSelected)
			SelectedCategories.Add(categoryId);
		else
			SelectedCategories.Remove(categoryId);

		FiltreProduits();
	}
	private void ToggleMarque(int marqueId, bool isSelected)
	{
		if (isSelected)
			SelectedMarques.Add(marqueId);
		else
			SelectedMarques.Remove(marqueId);

		FiltreProduits();
	}
	private void OnSortChange(string sort)
	{
		Sort = sort;
		FiltreProduits();
	}
	private void OnOrderChange(string order)
	{
		Order = order;
		FiltreProduits();
	}
	private void OnChangeCount(string count)
	{
		PerPage = int.Parse(count);
		FiltreProduits();
	}
	private void OnChangePage(int page)
	{
		CurrentPage = page;
		FiltreProduits();
	}
	[JSInvokable]
	public Task OnPrixChange(double value, int handle)
	{
		if (handle == 0)
			SelectedPrixMin = (int)value;
		else
			SelectedPrixMax = (int)value;

		FiltreProduits();
		return Task.CompletedTask;
	}
	public void Dispose()
	{
		if (dotNetReference != null)
		{
			dotNetReference?.Dispose();
			dotNetReference = null;
		}
	}
}
