@page "/Checkout"
@using dotNetStore.Data
@using dotNetStore.Models
@rendermode InteractiveServer
@inject CartService _Cart
@inject ApplicationDbContext _DbContext
@inject IJSRuntime _JSRuntime
@inject NavigationManager _NavManager

<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">

			<div class="col-md-7">
				<!-- Billing Details -->
				<div class="billing-details">
					<div class="section-title">
						<h3 class="title">Adresse de livraison</h3>
					</div>
					<div class="form-group">
						<input @bind="nomClient" class="input" type="text" placeholder="Nom Complet" required>
					</div>
					<div class="form-group">
						<input @bind="telephone" class="input" type="tel" placeholder="Téléphone" required>
					</div>
					<div class="form-group">
						<input @bind="adresse" class="input" type="text" placeholder="Adresse" required>
					</div>
					<div class="form-group">
						<input @bind="email" class="input" type="email" placeholder="Email" required>
					</div>
				</div>
				<!-- /Billing Details -->
			</div>

			<!-- Order Details -->
			<div class="col-md-5 order-details">
				<div class="section-title text-center">
					<h3 class="title">Votre Commande</h3>
				</div>
				<div class="order-summary">
					<div class="order-col">
						<div><strong>PRODUITS</strong></div>
						<div><strong>TOTAL</strong></div>
					</div>
					<div class="order-products">
						@foreach (var p in _Cart.Items)
						{
							<div class="order-col">
								<div>@(p.Qte)x @p.Nom</div>
								<div>@p.Total DH</div>
							</div>
						}
					</div>
					<div class="order-col">
						<div>Shipping</div>
						<div><strong>@_Cart.Items.Sum(i=>i.PrixShipping) DH</strong></div>
					</div>
					<div class="order-col">
						<div><strong>TOTAL</strong></div>
						<div><strong class="order-total">@(_Cart.Items.Sum(p => p.Total) + _Cart.Items.Sum(i => i.PrixShipping)) DH</strong></div>
					</div>
				</div>
				<a href="javascript:void(0);" @onclick="order" class="primary-btn order-submit">Commander</a>
			</div>
			<!-- /Order Details -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->

@code{
	string nomClient = "";
	string telephone = "";
	string adresse = "";
	string email = "";
	decimal shipping = 0;

	private async Task order()
	{
		if (!(string.IsNullOrWhiteSpace(nomClient) || string.IsNullOrWhiteSpace(telephone) || string.IsNullOrWhiteSpace(adresse) || string.IsNullOrWhiteSpace(email)))
		{
			if (await _JSRuntime.InvokeAsync<bool>("AlertifyConfirm", "Placer votre commande maintenant ?"))
			{
				Facture f = new() { Adresse = adresse, Email = email, NomClient = nomClient, Telephone=telephone, Reference="", PrixShipping = 0, Total = _Cart.Items.Sum(i=>i.Total)};
				_DbContext.Factures.Add(f);
				await _DbContext.SaveChangesAsync();
				f.Reference = $"#{f.Id.ToString("D6")}";

				foreach(var i in _Cart.Items){
					Commande c = new Commande() { Nom = i.Nom, Prix = i.Prix, Qte = i.Qte, Total = i.Total, PrixShipping=i.PrixShipping, ProduitId = i.ProduitId, FactureId = f.Id };
					_DbContext.Commandes.Add(c);
					shipping += c.PrixShipping;
				}
				f.PrixShipping = shipping;
				await _DbContext.SaveChangesAsync();

				_Cart.ClearCart();
				_NavManager.NavigateTo("/thanks");
			}
		}
		else
		{
			await _JSRuntime.InvokeVoidAsync( "alertify.alert", "Remplissez tous les infos !");
		}
	}
}
