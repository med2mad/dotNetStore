@page "/Details/{Id:int}"
@using dotNetStore.Models
@rendermode InteractiveServer
@inject IJSRuntime _JSRuntime
@inject NavigationManager _NavManager
@inject CartService _Cart
@implements IDisposable

<HeadContent>
	<style>
		.product .product-img img {
		cursor: pointer;
		transition: transform 0.3s ease;
		}
		.product .product-img img:hover {
		transform: scale(1.1);
		}
	</style>
</HeadContent>

<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<!-- Product main img -->
			<div class="col-md-5 col-md-push-2">
				<div id="product-main-img">
					@if (Produit.Photo1!=null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo1" alt="@Produit.Nom + photo1">
						</div>
					}
					@if (Produit.Photo2 != null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo2" alt="@Produit.Nom + photo2">
						</div>
					}
					@if (Produit.Photo3 != null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo3" alt="@Produit.Nom + photo3">
						</div>
					}
					@if (Produit.Photo4 != null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo4" alt="@Produit.Nom + photo4">
						</div>
					}
				</div>
			</div>
			<!-- /Product main img -->
			<!-- Product thumb imgs -->
			<div class="col-md-2  col-md-pull-5">
				<div id="product-imgs">
					@if (Produit.Photo1!=null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo1" alt="@Produit.Nom + photo1" style="cursor: pointer;">
						</div>
					}
					@if (Produit.Photo2!=null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo2" alt="@Produit.Nom + photo2" style="cursor: pointer;">
						</div>
					}
					@if (Produit.Photo3!=null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo3" alt="@Produit.Nom + photo3" style="cursor: pointer;">
						</div>
					}
					@if (Produit.Photo4 != null)
					{
						<div class="product-preview">
							<img src="./img/produits/@Produit.Photo4" alt="@Produit.Nom + photo4" style="cursor: pointer;">
						</div>
					}
				</div>
			</div>
			<!-- /Product thumb imgs -->
			<!-- Product details -->
			<div class="col-md-5">
				<div class="product-details">
					<h2 class="product-name">@Produit.Nom</h2>
					<div>
						<h3 class="product-price">@Produit.Prix DH <del class="product-old-price">@Produit.PrixAncien DH</del></h3>
					</div>
					<p>@Produit.Description</p>

					<div class="add-to-cart">
						<div class="qty-label">
							Qté
							<div class="input-number">
								<input @bind="qte" type="number">
							</div>
						</div>
						<button @onclick="()=>AddToCart(Produit.Id)"  class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i> Ajouter au panier</button>
					</div>

					<ul class="product-links">
						<li>Catégorie :</li>
						<li><a href="#">@Produit.Categorie?.Categorie</a></li>
						<li> | </li>
						<li>Marque :</li>
						<li><a href="#">@Produit.Marque?.Nom</a></li>
					</ul>
				</div>
			</div>
			<!-- /Product details -->

		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->

@if (RelatedProducts.Count>1)
{
	<!-- SECTION -->
	<div class="section">
		<!-- container -->
		<div class="container">
			<!-- row -->
			<div class="row">

				<!-- section title -->
				<div class="col-md-12">
					<div class="section-title text-center">
						<h3 class="title">Produits similaires</h3>
					</div>
				</div>
				<!-- /section title -->
				<!-- Products tab & slick -->
				<div class="col-md-12">
					<div class="row">
						<div class="products-tabs">
							<!-- tab -->
							<div id="tab1" class="tab-pane active">
								<div class="products-slick" data-nav="#slick-nav-1">
									<!-- product -->
									@foreach (var p in RelatedProducts)
									{
										if(Id==p.Id){continue;}
										<div class="product">
											<div onclick="GoToDetails(@p.Id)" class="product-img">
												<img src="./img/produits/@p.Photo1" alt="@p.Nom">
												<div class="product-label">
													@((MarkupString)(p.BadgeReduction > 0 ? $"<span class='sale'>-{Math.Abs(p.BadgeReduction)}%</span>" : ""))
													@((MarkupString)(p.BadgeNew ? "<span class='new'>NEW</span>" : ""))
												</div>
											</div>
											<div class="product-body">
												<p class="product-category">@p.Categorie?.Categorie</p>
												<h3 class="product-name"><a href="/Details/@p.Id">@p.Nom</a></h3>
												<h4 class="product-price">@p.Prix DH <del class="product-old-price">@p.PrixAncien DH</del></h4>
											</div>
										</div>
									}
									<!-- /product -->
								</div>
								<div id="slick-nav-1" class="products-slick-nav"></div>
							</div>
							<!-- /tab -->
						</div>
					</div>
				</div>
				<!-- Products tab & slick -->
			</div>
			<!-- /row -->
		</div>
		<!-- /container -->
	</div>
	<!-- /SECTION -->
}

@code {
	private int qte = 1;
	[JSInvokable]
	public async Task AddToCart(int id)
	{
		if (await _JSRuntime.InvokeAsync<bool>("AlertifyConfirm", "Ajouter cet article au panier ?"))
		{
			Produit P = RelatedProducts.FirstOrDefault(p => p.Id == id)!;
			_Cart.AddToCart(new CartItem
			{
				ProduitId = P.Id,
				Nom = P.Nom,
				Photo = P.Photo1,
				Prix = P.Prix ?? 0,
				Total = (P.Prix ?? 0) * qte,
				PrixShipping = (P.PrixShipping ?? 0) * qte,
				Qte = qte
			});
			qte = 1;
		}
	}
	[JSInvokable]
	public void GoToDetails(int id)
	{
		_NavManager.NavigateTo($"/Details/{id}");
	}

	private DotNetObjectReference<Details>? dotNetReference;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			dotNetReference = DotNetObjectReference.Create(this);
			await _JSRuntime.InvokeVoidAsync("initializeScripts", 9999, dotNetReference);
			await _JSRuntime.InvokeVoidAsync("initializeInterop", dotNetReference);
			await _JSRuntime.InvokeVoidAsync("window.scrollTo", 0, 0);
		}
	}
	public void Dispose()
	{
		if (dotNetReference != null)
		{
			dotNetReference?.Dispose();
			dotNetReference = null;
		}
	}
}
